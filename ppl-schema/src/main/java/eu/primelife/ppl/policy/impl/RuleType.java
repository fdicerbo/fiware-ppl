/*******************************************************************************
 * Copyright (c) 2013, SAP AG
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met:
 *  
 *     - Redistributions of source code must retain the above copyright notice,
 *      this list of conditions and the following disclaimer.
 *     - Redistributions in binary form must reproduce the above copyright 
 *      notice, this list of conditions and the following disclaimer in the 
 *      documentation and/or other materials provided with the distribution.
 *     - Neither the name of the SAP AG nor the names of its contributors may
 *      be used to endorse or promote products derived from this software 
 *      without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
 * THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v3.0-03/04/2009 09:20 AM(valikov)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.11.03 at 09:58:45 AM CET 
//


package eu.primelife.ppl.policy.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import eu.primelife.ppl.policy.credential.impl.CredentialRequirementsType;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.builder.JAXBEqualsBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBHashCodeBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBToStringBuilder;


/**
 * <p>Java class for RuleType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RuleType">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:oasis:names:tc:xacml:2.0:policy:schema:os}RuleType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.primelife.eu/ppl}DataHandlingPolicy" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.primelife.eu/ppl}DataHandlingPreferences" minOccurs="0"/>
 *         &lt;element ref="{http://www.primelife.eu/ppl}StickyPolicy" minOccurs="0"/>
 *         &lt;element ref="{http://www.primelife.eu/ppl/credential}CredentialRequirements" minOccurs="0"/>
 *         &lt;element ref="{http://www.primelife.eu/ppl}ProvisionalActions" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RuleType", propOrder = {
    "dataHandlingPolicy",
    "dataHandlingPreferences",
    "stickyPolicy",
    "credentialRequirements",
    "provisionalActions"
})
@Entity(name = "eu.primelife.ppl.policy.impl.RuleType")
@Table(name = "RULETYPE")
public class RuleType
    extends eu.primelife.ppl.policy.xacml.impl.RuleType
    implements Serializable, Equals, HashCode, ToString
{

    @XmlElement(name = "DataHandlingPolicy")
    protected List<DataHandlingPolicyType> dataHandlingPolicy;
    @XmlElement(name = "DataHandlingPreferences")
    protected DataHandlingPreferencesType dataHandlingPreferences;
    @XmlElement(name = "StickyPolicy")
    protected StickyPolicyType stickyPolicy;
    @XmlElement(name = "CredentialRequirements", namespace = "http://www.primelife.eu/ppl/credential")
    protected CredentialRequirementsType credentialRequirements;
    @XmlElement(name = "ProvisionalActions")
    protected ProvisionalActionsType provisionalActions;

    /**
     * Gets the value of the dataHandlingPolicy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataHandlingPolicy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataHandlingPolicy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataHandlingPolicyType }
     * 
     * 
     */
    @OneToMany(targetEntity = DataHandlingPolicyType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAHANDLINGPOLICY_RULETYPE__0")
    public List<DataHandlingPolicyType> getDataHandlingPolicy() {
        if (dataHandlingPolicy == null) {
            dataHandlingPolicy = new ArrayList<DataHandlingPolicyType>();
        }
        return this.dataHandlingPolicy;
    }

    /**
     * 
     * 
     */
    public void setDataHandlingPolicy(List<DataHandlingPolicyType> dataHandlingPolicy) {
        this.dataHandlingPolicy = dataHandlingPolicy;
    }

    /**
     * Gets the value of the dataHandlingPreferences property.
     * 
     * @return
     *     possible object is
     *     {@link DataHandlingPreferencesType }
     *     
     */
    @ManyToOne(targetEntity = DataHandlingPreferencesType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATAHANDLINGPREFERENCES_RULE_0")
    public DataHandlingPreferencesType getDataHandlingPreferences() {
        return dataHandlingPreferences;
    }

    /**
     * Sets the value of the dataHandlingPreferences property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataHandlingPreferencesType }
     *     
     */
    public void setDataHandlingPreferences(DataHandlingPreferencesType value) {
        this.dataHandlingPreferences = value;
    }

    /**
     * Gets the value of the stickyPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link StickyPolicyType }
     *     
     */
    @ManyToOne(targetEntity = StickyPolicyType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STICKYPOLICY_RULETYPE_HJID")
    public StickyPolicyType getStickyPolicy() {
        return stickyPolicy;
    }

    /**
     * Sets the value of the stickyPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link StickyPolicyType }
     *     
     */
    public void setStickyPolicy(StickyPolicyType value) {
        this.stickyPolicy = value;
    }

    /**
     * Gets the value of the credentialRequirements property.
     * 
     * @return
     *     possible object is
     *     {@link CredentialRequirementsType }
     *     
     */
    @ManyToOne(targetEntity = CredentialRequirementsType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CREDENTIALREQUIREMENTS_RULET_0")
    public CredentialRequirementsType getCredentialRequirements() {
        return credentialRequirements;
    }

    /**
     * Sets the value of the credentialRequirements property.
     * 
     * @param value
     *     allowed object is
     *     {@link CredentialRequirementsType }
     *     
     */
    public void setCredentialRequirements(CredentialRequirementsType value) {
        this.credentialRequirements = value;
    }

    /**
     * Gets the value of the provisionalActions property.
     * 
     * @return
     *     possible object is
     *     {@link ProvisionalActionsType }
     *     
     */
    @ManyToOne(targetEntity = ProvisionalActionsType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROVISIONALACTIONS_RULETYPE__0")
    public ProvisionalActionsType getProvisionalActions() {
        return provisionalActions;
    }

    /**
     * Sets the value of the provisionalActions property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProvisionalActionsType }
     *     
     */
    public void setProvisionalActions(ProvisionalActionsType value) {
        this.provisionalActions = value;
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof RuleType)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        super.equals(object, equalsBuilder);
        final RuleType that = ((RuleType) object);
        equalsBuilder.append(this.getDataHandlingPolicy(), that.getDataHandlingPolicy());
        equalsBuilder.append(this.getDataHandlingPreferences(), that.getDataHandlingPreferences());
        equalsBuilder.append(this.getStickyPolicy(), that.getStickyPolicy());
        equalsBuilder.append(this.getCredentialRequirements(), that.getCredentialRequirements());
        equalsBuilder.append(this.getProvisionalActions(), that.getProvisionalActions());
    }

    public boolean equals(Object object) {
        if (!(object instanceof RuleType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new JAXBEqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        super.hashCode(hashCodeBuilder);
        hashCodeBuilder.append(this.getDataHandlingPolicy());
        hashCodeBuilder.append(this.getDataHandlingPreferences());
        hashCodeBuilder.append(this.getStickyPolicy());
        hashCodeBuilder.append(this.getCredentialRequirements());
        hashCodeBuilder.append(this.getProvisionalActions());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new JAXBHashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

    public void toString(ToStringBuilder toStringBuilder) {
        super.toString(toStringBuilder);
        {
            List<DataHandlingPolicyType> theDataHandlingPolicy;
            theDataHandlingPolicy = this.getDataHandlingPolicy();
            toStringBuilder.append("dataHandlingPolicy", theDataHandlingPolicy);
        }
        {
            DataHandlingPreferencesType theDataHandlingPreferences;
            theDataHandlingPreferences = this.getDataHandlingPreferences();
            toStringBuilder.append("dataHandlingPreferences", theDataHandlingPreferences);
        }
        {
            StickyPolicyType theStickyPolicy;
            theStickyPolicy = this.getStickyPolicy();
            toStringBuilder.append("stickyPolicy", theStickyPolicy);
        }
        {
            CredentialRequirementsType theCredentialRequirements;
            theCredentialRequirements = this.getCredentialRequirements();
            toStringBuilder.append("credentialRequirements", theCredentialRequirements);
        }
        {
            ProvisionalActionsType theProvisionalActions;
            theProvisionalActions = this.getProvisionalActions();
            toStringBuilder.append("provisionalActions", theProvisionalActions);
        }
    }

    public String toString() {
        final ToStringBuilder toStringBuilder = new JAXBToStringBuilder(this);
        toString(toStringBuilder);
        return toStringBuilder.toString();
    }

}
